{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jithendra\\\\mern-stack\\\\client\\\\src\\\\pages\\\\Article.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport articleContent from './article-content';\n\n//page\nimport NotFound from './NotFound';\n\n//components\nimport Articles from '../components/Articles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Article = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    comments: []\n  });\n\n  //so since the code that we are using to use to fetch the data involves a synchronised fetching operation which will be using asyn and await keyword inside the useeffect // the only prob here is that useeffect does not allow the func that we pass here to be async so suppose if we do useEffect(async() => ...) here so it will not work\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log;\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]); //we need the euseeffect to only run when the url parameter changes so here we are taking an array and inside it pass name [name]\n  //this use effect run everytime when component loads\n\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n  //<h1>Article does not exist</h1> \n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sm:text-4xl text-2xl font-bold my-6 text-gray-900\",\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), article.content.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mx-auto leading-relaxed text-base mb-4\",\n      children: paragraph\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sm:text-2xl text-xl font-bold my-4 text-gray-900\",\n      children: \"Other Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap -m-4\",\n      children: /*#__PURE__*/_jsxDEV(Articles, {\n        articles: otherArticles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true)\n  // use react fragment <></> instead of <div></div> it is always better\n  ;\n};\n_s(Article, \"bnChV7r9ftGhby10imzZeGFM0RQ=\", false, function () {\n  return [useParams];\n});\n_c = Article;\nexport default Article;\nvar _c;\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"names":["React","useState","useEffect","useParams","articleContent","NotFound","Articles","jsxDEV","_jsxDEV","Fragment","_Fragment","Article","_s","name","article","find","articleInfo","setArticleInfo","comments","fetchData","result","fetch","body","json","console","log","fileName","_jsxFileName","lineNumber","columnNumber","otherArticles","filter","children","className","title","content","map","paragraph","index","articles","_c","$RefreshReg$"],"sources":["C:/Users/Jithendra/mern-stack/client/src/pages/Article.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport articleContent from './article-content'\r\n\r\n//page\r\nimport NotFound from './NotFound'\r\n\r\n//components\r\nimport Articles from '../components/Articles'\r\n\r\n\r\nconst Article = () => {\r\n  const {name} = useParams();\r\n  const article = articleContent.find((article) => article.name === name);\r\n\r\n  const [articleInfo, setArticleInfo] = useState({ comments: [] });\r\n\r\n  //so since the code that we are using to use to fetch the data involves a synchronised fetching operation which will be using asyn and await keyword inside the useeffect // the only prob here is that useeffect does not allow the func that we pass here to be async so suppose if we do useEffect(async() => ...) here so it will not work\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/articles/${name}`);\r\n      const body = await result.json();\r\n      console.log\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n    \r\n  }, [name]); //we need the euseeffect to only run when the url parameter changes so here we are taking an array and inside it pass name [name]\r\n  //this use effect run everytime when component loads\r\n  \r\n\r\n\r\n\r\n  if(!article) \r\n    return <NotFound />\r\n    //<h1>Article does not exist</h1> \r\n  const otherArticles = articleContent.filter(article => article.name !== name)\r\n  return (\r\n    <>\r\n      {/* <h1 className='sm:text-4xl text-2xl font-bold my-6 text-gray-900'>This is the {name} Article</h1>   \r\n      {/* so whetever param you will pass in url i will show here {name}\r\n      http://localhost:5173/article/learn-react then it will show This is the learn-react Article*/} \r\n\r\n      <h1 className='sm:text-4xl text-2xl font-bold my-6 text-gray-900'>{article.title}</h1> \r\n      {article.content.map((paragraph, index) => (\r\n        <p className=\"mx-auto leading-relaxed text-base mb-4\" key={index}>{paragraph}</p>\r\n      ))}\r\n       \r\n      <h1 className='sm:text-2xl text-xl font-bold my-4 text-gray-900'>\r\n        Other Articles\r\n      </h1>\r\n\r\n      <div className='flex flex-wrap -m-4'>\r\n        <Articles articles= {otherArticles} /> \r\n        {/* passing it as prop otherArticles */}\r\n      </div>\r\n\r\n    </>\r\n    // use react fragment <></> instead of <div></div> it is always better\r\n  )\r\n}\r\n\r\nexport default Article\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,mBAAmB;;AAE9C;AACA,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA,OAAOC,QAAQ,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAI,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,OAAO,GAAGV,cAAc,CAACW,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACD,IAAI,KAAKA,IAAI,CAAC;EAEvE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,QAAQ,EAAE;EAAG,CAAC,CAAC;;EAEhE;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,iBAAiBR,IAAI,EAAE,CAAC;MACnD,MAAMS,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAChCC,OAAO,CAACC,GAAG;MACXR,cAAc,CAACK,IAAI,CAAC;IACtB,CAAC;IACDH,SAAS,CAAC,CAAC;EAEb,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;;EAKA,IAAG,CAACC,OAAO,EACT,oBAAON,OAAA,CAACH,QAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACnB;EACF,MAAMC,aAAa,GAAG1B,cAAc,CAAC2B,MAAM,CAACjB,OAAO,IAAIA,OAAO,CAACD,IAAI,KAAKA,IAAI,CAAC;EAC7E,oBACEL,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBAKExB,OAAA;MAAIyB,SAAS,EAAC,mDAAmD;MAAAD,QAAA,EAAElB,OAAO,CAACoB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrFf,OAAO,CAACqB,OAAO,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACpC9B,OAAA;MAAGyB,SAAS,EAAC,wCAAwC;MAAAD,QAAA,EAAcK;IAAS,GAAjBC,KAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CACjF,CAAC,eAEFrB,OAAA;MAAIyB,SAAS,EAAC,kDAAkD;MAAAD,QAAA,EAAC;IAEjE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELrB,OAAA;MAAKyB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,eAClCxB,OAAA,CAACF,QAAQ;QAACiC,QAAQ,EAAGT;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnC,CAAC;EAAA,eAEN;EACF;EAAA;AAEJ,CAAC;AAAAjB,EAAA,CAjDKD,OAAO;EAAA,QACIR,SAAS;AAAA;AAAAqC,EAAA,GADpB7B,OAAO;AAmDb,eAAeA,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}